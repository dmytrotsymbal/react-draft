
    const [todos, setTodos] = useState([])
    const [text, setText] = useState('')

 // const addTodo = () => {
    //     if (text === '') {
    //         alert('Введите текст')
    //     }
    //     setTodos([
    //         ...todos,
    //         {
    //             id: Date.now(),
    //             text,
    //             completed: false,
    //         },
    //     ])
    //     setText('')
    // }

    //Функция addTodo в этом коде отвечает за добавление нового элемента в список todos.
//Вот как она работает:

//При клике на кнопку "Add" вызывается функция addTodo.
//Внутри функции, используется функция обновления состояния setTodos для добавления
//нового элемента в массив todos.

//setTodos принимает новое значение для состояния todos, которое является массивом,
//состоящим из предыдущих элементов ...todos, а также нового элемента, который представляет собой объект
//с двумя свойствами: id и text.

//Значение id устанавливается с помощью Date.now(). Date.now() возвращает текущую дату и
//время в миллисекундах, представленных в числовом формате. Это используется для генерации уникальных
//идентификаторов для каждого нового элемента todo.

//Значение text устанавливается с помощью переменной text, которая хранит текущее значение ввода текста
//из текстового поля.

//После добавления нового элемента в состояние todos, значение переменной text очищается с помощью setText('').

//Таким образом, каждый раз при клике на кнопку "Add",
//новый элемент с уникальным идентификатором (Date.now()) и текстом из текстового поля добавляется
//в состояние todos, а затем текстовое поле очищается.


    //------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------


    // const deleteTodo = (identificator) => {
    //     setTodos(todos.filter((todo) => todo.id !== identificator))
    // }

    // Внутри функции, используется функция обновления состояния setTodos для обновления состояния todos.

    // setTodos принимает новое значение для состояния todos, которое
    // является результатом фильтрации массива todos.

    // Внутри функции фильтрации, используется метод filter для отфильтровывания элементов,
    // у которых идентификатор не совпадает с переданным идентификатором.

    // Таким образом, элемент с переданным идентификатором будет удален из состояния todos,
    // а новое значение состояния будет содержать только оставшиеся элементы.

    //------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------


    // const toggleTodoComplet = (todoId) => {
    //     setTodos(
    //         todos.map((todo) =>
    //             todo.id === todoId
    //                 ? { ...todo, completed: !todo.completed }
    //                 : todo
    //         )
    //     )
    // }
